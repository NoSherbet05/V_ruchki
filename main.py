import telebot
from telebot import types
import csv

bot = telebot.TeleBot('8037360232:AAG5BjdTU-357eNZu94BnbCWRA866xrU6jg')
reader_counter = 1


@bot.callback_query_handler(func=lambda callback: True)
def callback_message_menu(callback):
    global reader_counter
    F = open('DataSet.csv', 'r', encoding='cp1251')
    reader = list(csv.reader(F))[reader_counter]

    if callback.data == 'cont':
        btn2 = types.InlineKeyboardButton("‚ùî FAQ", callback_data='inf')
        btn3 = types.InlineKeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç–æ—á–µ–∫ üêï", callback_data='browse')
        markup = types.InlineKeyboardMarkup()
        markup.row(btn2, btn3)

        # Delete the previous messages
        try:
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            # bot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
        except Exception as e:
            print(f"Error deleting message: {e}")

        bot.send_message(callback.message.chat.id, '–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Å–µ–π—á–∞—Å?', reply_markup=markup, parse_mode='html')

    elif callback.data == 'inf':
        btn_link = types.InlineKeyboardButton("üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª", callback_data='link')
        btn_back = types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_menu')
        markup = types.InlineKeyboardMarkup()
        markup.row(btn_back)
        markup.row(btn_link)

        try:
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
        except Exception as e:
            print(f"Error deleting message: {e}")

        bot.send_message(callback.message.chat.id, '‚ö° <b>–ß—Ç–æ –≤—ã –Ω–∞–π–¥—ë—Ç–µ —É –Ω–∞—Å?</b>\n\n'
                                                   'üî• <b>–ö–∞—Ä—Ç–æ—á–∫–∏ —Å —Å–æ–±–∞–Ω—å–∫–∞–º–∏:</b> –Ω–µ–±–æ–ª—å—à–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–ª–∞–π–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ ¬´—Å–≤–∞–π–ø–∞—Ç—å¬ª –∏ –ø–æ–¥–±–∏—Ä–∞—Ç—å —Å–æ–±–∞–∫—É, –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–æ–¥ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã\n\n '
                                                   'üî• <b>–†–∞–∑–¥–µ–ª —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏:</b> –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∫–∞—Å—Ç–æ–≤, —Å—Ç–∞—Ç–µ–π –∏ –∫—É—Ä—Å–æ–≤ –æ—Ç –Ω–∞—à–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤\n\n'
                                                   'üî• <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∞–Ω–æ–Ω—Å—ã —Ä–∞–∑–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:</b> –≤ –Ω–∞—à–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –í—ã –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç–µ –∑–Ω–∞—Ç—å, –∫—Ç–æ –∂–µ —Å—Ç–∞–ª —Å—á–∞—Å—Ç–ª–∏–≤—á–∏–∫–æ–º –∏ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –Ω–∞ –º—è–≥–∫–∏–π –¥–∏–≤–∞–Ω, –∞ —Ç–∞–∫–∂–µ –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—Ç–µ –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–∞—à–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è—Ö, –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –æ—á–µ–Ω—å –º–Ω–æ–≥–æ.\n\n'
                                                   '<b>–ù–æ —ç—Ç–æ –µ—â–µ –¥–∞–ª–µ–∫–æ –Ω–µ –≤—Å–µ, –ø–æ—ç—Ç–æ–º—É –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –Ω–∏—á–µ–≥–æ –≤–∞–∂–Ω–æ–≥–æ, –∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π ‚Äî –≤–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º –ø–æ–º–æ—á—å –±–æ–ª—å—à–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∂–∏–≤–æ—Ç–Ω—ã—Ö!</b>', reply_markup=markup, parse_mode='html')

    elif callback.data == 'browse':
        try:
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
        except Exception as e:
            print(f"Error deleting message: {e}")

        browse(callback.message)


    elif callback.data == 'more':
        with open('DataSet.csv', 'r', encoding='cp1251') as file:
            reader = list(csv.reader(file))[reader_counter]
            sex = reader[1]
            age = reader[2]
            location = reader[3]
            link = reader[4]
            # breed = reader[5]
        # –ü–æ—Ä–æ–¥–∞: {}\n
        bot.send_message(callback.message.chat.id, f'<b>–ü–æ–ª:</b> {sex}\n\n'
                                                   f'<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}\n\n'
                                                   f'<b>–ê–¥—Ä–µ—Å –ø—Ä–∏—é—Ç–∞:</b> {location}\n\n'
                                                   f'<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –º–µ–¥. –∫–∞—Ä—Ç—É:</b> {link} —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è\n\n'
                                                   f'<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b> https://vk.com/vruchke', parse_mode='html')

    elif callback.data == 'next':
        if reader_counter < len(reader):
            reader_counter += 1
        if reader_counter != len(reader):
            browse(callback.message)
        else:
            bot.send_message(callback.message.chat.id, '–ù–∞ —ç—Ç–æ–º –ø–æ–∫–∞ –≤—Å–µ!')
            reader_counter = 1

    elif callback.data == 'back_to_menu':
        btn2 = types.InlineKeyboardButton("‚ùî FAQ", callback_data='inf')
        btn3 = types.InlineKeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç–æ—á–µ–∫ üêï", callback_data='browse')
        markup = types.InlineKeyboardMarkup()
        markup.row(btn2, btn3)

        try:
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
        except Exception as e:
            print(f"Error deleting message: {e}")

        bot.send_message(callback.message.chat.id, '–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Å–µ–π—á–∞—Å?', reply_markup=markup)

    elif callback.data == 'link':
        bot.send_message(callback.message.chat.id, "–û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª: https://t.me/vruchke")

@bot.message_handler(commands=['start'])
def start(message):
    btn_cont = types.InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°Ô∏è", callback_data='cont')
    markup = types.InlineKeyboardMarkup()
    markup.row(btn_cont)
    bot.send_message(message.chat.id, '''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ "–í –†—É—á–∫–∏"!''', reply_markup=markup, parse_mode='HTML')


# —Ñ—É–Ω–∫—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
@bot.message_handler(commands=['browse'])
@bot.callback_query_handler(func=lambda callback: callback.data == 'browse')
def browse(message):
    global reader_counter
    with open('DataSet.csv', 'r', encoding='cp1251') as file:
        reader = list(csv.reader(file))[reader_counter]
        name = reader[0]
        img = reader[5]
        btn_next = types.InlineKeyboardButton("–°–º–æ—Ç—Ä–µ—Ç—å –¥–∞–ª—å—à–µ ‚û°Ô∏è", callback_data='next', parse_mode='Markdown')
        btn_more = types.InlineKeyboardButton("‚ÑπÔ∏è –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å", callback_data='more', parse_mode='Markdown')
        markup = types.InlineKeyboardMarkup()
        markup.row(btn_more, btn_next)
        with open(img, 'rb') as photo:
            bot.send_photo(message.chat.id, photo, caption=f'{name} üê∂', reply_markup=markup, parse_mode='Markdown')


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    bot.polling(none_stop=True)